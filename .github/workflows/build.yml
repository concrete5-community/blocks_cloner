name: Build

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - main

jobs:

  build-js:
    name: Build JavaScript
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: build/package-lock.json
      -
        name: Install dependencies
        working-directory: build
        run: npm ci
      -
        name: Check coding style
        working-directory: build
        run: npm run lint:check
      -
        name: Build
        working-directory: build
        run: npm run prod
      -
        name: Check changes
        id: check-changes
        run: |
          git add --all assets
          if git diff-index --name-status --exit-code HEAD assets; then
            echo 'No changes detected.'
          else
            echo 'Changes detected.'
            echo 'commit=yes' >> $GITHUB_OUTPUT
          fi
      -
        name: Commit changes
        if: github.event_name == 'push' && steps.check-changes.outputs.commit == 'yes'
        run: |
          git config --local user.name 'GitHub Actions'
          git config --local user.email noreply@github.com
          git commit -m 'Update assets/view.js'
          git push

  check-php-syntax:
    name: PHP ${{ matrix.php-version }} Syntax
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - "5.5"
          - "8.4"
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: opcache
          coverage: none
          tools: none
      -
        name: Check syntax
        uses: mlocati/check-php-syntax@v1
        with:
          fail-on-warnings: true

  check-php-coding-style:
    name: PHP Coding Style
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: php-cs-fixer:v3
      -
        name: Check coding style
        run: php-cs-fixer check --diff --ansi --no-interaction -vvv --using-cache=no

  check-development-leftovers:
    name: Check Development Leftovers
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Search for debugger or xdebug_break
        run: |
          echo "Scanning for 'debugger' or 'xdebug_break'..."
          matches=$(grep -Enr --include=\*.{js,php,ts} '(^|[^a-zA-Z0-9_])(debugger|xdebug_break)\b' . || true)
          if [[ -n "$matches" ]]; then
            echo "Found the following matches:"
            echo "$matches"
            echo "::error::Development leftovers found in the codebase."
            exit 1
          else
            echo "No development leftovers found."
          fi

  check-install:
    name: Install on Concrete ${{ matrix.ccm-version }}
    runs-on: ubuntu-latest
    container: ghcr.io/concrete5-community/docker5:${{ matrix.ccm-version }}
    needs:
      - check-php-syntax
      - check-php-coding-style
      - check-development-leftovers
    strategy:
      matrix:
        ccm-version:
          - 8.5.4
          - "8.5"
          - "9.0"
          - "9.1"
          - "9.2"
          - "9.3"
          - "9.4"
          - latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Check composer.json
        run: sudo -u www-data composer --ansi --no-interaction validate --strict -- "$GITHUB_WORKSPACE/composer.json"
      -
        name: Start services
        run: ccm-service start db
      -
        name: Core info
        run: sudo -u www-data /app/concrete/bin/concrete5 --ansi --no-interaction c5:info
      -
        name: Uninstall bundled package
        run: |
          sudo -u www-data /app/concrete/bin/concrete5 --ansi --no-interaction c5:package:uninstall blocks_cloner || true
          rm -rf /app/packages/blocks_cloner
      -
        name: Prepare package
        run: ln -s "$GITHUB_WORKSPACE" /app/packages/blocks_cloner
      -
        name: Install package
        run: sudo -u www-data /app/concrete/bin/concrete5 --ansi --no-interaction c5:package:install blocks_cloner
